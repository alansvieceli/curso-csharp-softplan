// <auto-generated />
using System;
using Microservice.Whatevers.Repositories.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microservice.Whatevers.Repositories.Migrations
{
    [DbContext(typeof(WhateverContext))]
    partial class WhateverContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Microservice.Whatevers.Domain.Entities.Things.Thing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("WhateverId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WhateverId");

                    b.ToTable("Thing");
                });

            modelBuilder.Entity("Microservice.Whatevers.Domain.Entities.Whatevers.Whatever", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Whatever");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7c6ec79-a64a-47fd-8b6a-7f56b6c67e14"),
                            Name = "Whatever",
                            Time = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "Some type"
                        },
                        new
                        {
                            Id = new Guid("01d26bd4-3a1a-4f44-bec7-620b3c48b9b2"),
                            Name = "Whatever",
                            Time = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            Type = "Another type"
                        },
                        new
                        {
                            Id = new Guid("48d7a452-95e0-482a-9910-3d315aad375f"),
                            Name = "Whatever",
                            Time = new DateTime(2020, 4, 25, 12, 42, 11, 891, DateTimeKind.Local).AddTicks(4236),
                            Type = "More another type"
                        },
                        new
                        {
                            Id = new Guid("a9d72406-ab03-49d5-af85-d90711a0c70e"),
                            Name = "Whatever",
                            Time = new DateTime(2020, 4, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            Type = "Once more another type"
                        });
                });

            modelBuilder.Entity("Microservice.Whatevers.Domain.Entities.Things.Thing", b =>
                {
                    b.HasOne("Microservice.Whatevers.Domain.Entities.Whatevers.Whatever", null)
                        .WithMany("Things")
                        .HasForeignKey("WhateverId");
                });
#pragma warning restore 612, 618
        }
    }
}
